<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
                        http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
                        http://www.springframework.org/schema/context
                        http://www.springframework.org/schema/context/spring-context-3.1.xsd
                        http://www.springframework.org/schema/mvc
                        http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd">



    <mvc:resources mapping="/static/**" location="/static/"/>

    <mvc:annotation-driven/>
    <context:annotation-config/>


    <!-- 自动扫描该包，使SpringMVC认为包下用了@controller注解的类是控制器 -->
    <!-- 注解探测器 -->
    <context:component-scan base-package="com.recruit.controller" >
        <context:include-filter type="annotation" expression="org.springframework.stereotype.Controller" />
        <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Service" />
    </context:component-scan>


    <!-- 加载Velocity属性文件和资源路径. -->
    <bean id="velocityConfig" class="org.springframework.web.servlet.view.velocity.VelocityConfigurer">
        <property name="resourceLoaderPath" value="/WEB-INF/views" />
        <property name="configLocation" value="classpath:velocity/velocity.properties" />
    </bean>

    <!-- Velocity视图解析器 -->
    <bean id="viewResolver" class="org.springframework.web.servlet.view.velocity.VelocityViewResolver">
        <property name="prefix" value="" />
        <property name="suffix" value=".html" />
        <!-- Whether we should cache views, once resolved -->
        <property name="cache" value="false" />
        <property name="contentType" value="text/html;charset=utf-8" />
        <!-- 暴露Spring本身的宏 -->
        <property name="exposeSpringMacroHelpers" value="true" />
        <property name="exposeRequestAttributes" value="true" />

         <!--&lt;!&ndash;格式化日期 :$dateTool.format("yyyy-MM-dd",$!{})&ndash;&gt;-->
        <property name="dateToolAttribute" value="tcDate" />

        <!--<property name="LocaleAwareDateTool" value="LocaleAwareDateTool"/>-->

        <property name="toolboxConfigLocation" value="/WEB-INF/classes/velocity/toolbox.xml" />

    </bean>

    <!--<bean id="viewResolver"-->
          <!--class="org.springframework.web.servlet.view.InternalResourceViewResolver">-->
        <!--<property name="viewClass"-->
                  <!--value="org.springframework.web.servlet.view.JstlView" />-->
        <!--<property name="prefix" value="/views/"/>-->
        <!--<property name="suffix" value=".jsp"/>-->
    <!--</bean>-->


    <!--<mvc:interceptors>-->
        <!--<mvc:interceptor>-->
            <!--<mvc:mapping path="/bsp/**" />-->
            <!--<mvc:mapping path="/tc/**" />-->
            <!--<bean  class="com.tcResourceManagement.bsp.bean.AuthorizedInfoInterceptor"/>-->
        <!--</mvc:interceptor>-->
        <!--&lt;!&ndash; 使用bean定义一个Interceptor，直接定义在mvc:interceptors根下面的Interceptor将拦截所有的请求 &ndash;&gt;-->
       <!--&lt;!&ndash; <bean id="allInterceptor"  class="com.tcResourceManagement.bsp.bean.AuthorizedInfoInterceptor"/>&ndash;&gt;-->
    <!--</mvc:interceptors>-->

    <mvc:default-servlet-handler />
    <context:annotation-config />
    <mvc:annotation-driven />

</beans>